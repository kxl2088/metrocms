<?php defined('BASEPATH') or exit('No direct script access allowed');

/**
 * Setcookie Plugin
 *
 * Read and write session data
 *
 * @author  MetroCMS Dev Team
 * @package MetroCMS\Apps\Modules\Setcookie
 */
class Plugin_Setcookie extends Plugin
{

	public $version = '1.0.0';
	public $name = array(
		'en' => 'Setcookie',
	);
	public $description = array(
		'en' => 'Get data cookie generated by Setcookie Module.',
	);

	/**
	 * Returns a PluginDoc array
	 *
	 * Refer to the Blog plugin for full documentation
	 *
	 * @return array
	 */
	public function _self_doc()
	{
		$info = array(
			'get_userdata' => array(
				'description' => array(
					'en' => 'Output setcookie data.'
				),
				'single' => true,
				'double' => true,
				'variables' => '',
				'attributes' => array(
                                    'name' => array(// this is the order-dir="asc" attribute
						'type' => 'text',// Can be: slug, number, flag, text, array, any.
						'flags' => '',// flags are predefined values like this.
						'default' => '',// attribute defaults to this if no value is given
						'required' => false,// is this attribute required?
					),
                                    ),
				),
			'set_userdata' => array(
				'description' => array(
					'en' => 'Set a setcookie data.'
				),
				'single' => true,
				'double' => false,
				'variables' => '',
				'attributes' => array(
                                    'name' => array(// this is the order-dir="asc" attribute
						'type' => 'text',// Can be: slug, number, flag, text, array, any.
						'flags' => '',// flags are predefined values like this.
						'default' => '',// attribute defaults to this if no value is given
						'required' => true,// is this attribute required?
					),
                                    'value' => array(// this is the order-dir="asc" attribute
						'type' => 'text',// Can be: slug, number, flag, text, array, any.
						'flags' => '',// flags are predefined values like this.
						'default' => '',// attribute defaults to this if no value is given
						'required' => true,// is this attribute required?
					),
                                    ),
				),
			);

		return $info;
	}

	/**
	 * Get userdata array
	 *
	 * Usage:
	 *
	 *     {{ setcookie:get_userdata name="foo" }}
         *     
         *     or
	 *
         *     {{ setcookie:get_userdata }}
         *          {{ key }}
         *     {{ /setcookie:get_userdata }}
         * 
	 * @return string All or the selected userdata array.
	 */
	public function get_userdata()
	{
            $name  = $this->attribute('name');  
            
            $userdata = $this->input->cookie('default_setcookie') ? unserialize($this->input->cookie('default_setcookie')) : false;
            
            if(!$name)
            {
                return $userdata;
            }
            else
            {
                return $userdata[$name];
            }
	}
	
        /**
	 * Set userdata array
	 *
	 * Usage:
	 *
	 *     {{ setcookie:set_userdata name="foo" value="string" }}
         *       
	 * @return string Set an userdata.
	 */
	public function set_userdata()
	{
            $name  = $this->attribute('name');  
            $value  = $this->attribute('value');  
            
            $userdata = $this->input->cookie('default_setcookie') ? unserialize($this->input->cookie('default_setcookie')) : false;
            
            if($name && $value)
            {
                $setcookie = array();
                $setcookie[$name] = $value;                
                    
                $newdata =  array('error' => FALSE) + $setcookie + $userdata;  

                setcookie('default_setcookie', serialize($newdata), time()+(60*60*24*365), '/');
            }
            
            return false;            
	}
}
